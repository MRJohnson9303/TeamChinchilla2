@model MESACCA.ViewModels.News.AddNewsViewModel

@{
    ViewBag.Title = "Edit News";
}

<script>
    $(document).ready(function () {
        CKEDITOR.replace('ArticleBody', {
            skin: 'moonocolor,/ckeditor/skins/moonocolor/',
            customConfig: '/ckeditor/config.js'
        });
    });
</script>

<h2>Edit News</h2>

@if (ViewBag.Message != null)
{
    <span>@ViewBag.Message</span>
}

@using (Html.BeginForm("EditNews", "News", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ArticleID)
        <div class="form-group">
            @Html.LabelFor(model => model.ArticleTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ArticleTitle, new { htmlAttributes = new { @class = "form-control", maxlength = 100 } })
                @Html.ValidationMessageFor(model => model.ArticleTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ArticleBody, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.ArticleBody, 4, 20, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ArticleBody, "", new { @class = "text-danger" })
            </div>
        </div>
        <dl class="dl-horizontal">
        <dt>
            Attached file:
        </dt>

        <dd>
            @Model.fileName
        </dd>
        </dl>
       <!-- @Html.LabelFor(model => model.fileName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.fileName, new { htmlAttributes = new { @class = "form-control", maxlength = 100 } })
            @Html.ValidationMessageFor(model => model.fileName, "", new { @class = "text-danger" })
        </div>
           -->
        <!--<div class="col-lg-2"></div>
        <div class="btn-toolbar">


            <input type="file" ID="File" name="File" />

        </div>-->
        @*<div class="form-group">
                @Html.LabelFor(model => model.DateOfArticle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateOfArticle, new { htmlAttributes = new { @class = "form-control date-picker" } })
                    @Html.ValidationMessageFor(model => model.DateOfArticle, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="col-lg-2"></div>
        <div class="btn-toolbar">
            <div class="col-md-2">
                <input type="file" ID="File" name="File" />
                <input type="submit" value="Save" class="btn btn-default" />
               <!-- | <button type="submit" name="button" value="back" class="btn btn-default">Back to List</button>-->
                <a href="@Url.Action("SelectNews", "News")" class="btn btn-primary"> Back to Selecting News</a>

            </div>

            @*@if (Request.Params["referrer"] == "Admin")
                {
                    <a class="btn btn-default center-block" href="@Url.Action("ManageSite", "Admin")">Return to Manage Site Options</a>
                }
                else if (Request.Params["referrer"] == "Director")
                {
                    <a class="btn btn-default" href="@Url.Action("ManageSite", "Director")">Return to Manage Site Options</a>
                }
                else if (Request.Params["referrer"] == "Staff")
                {
                    <a class="btn btn-default" href="@Url.Action("ManageSite", "Staff")">Return to Manage Site Options</a>
                }*@
        </div>



    </div>

}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
