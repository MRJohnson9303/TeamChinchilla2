@model MESACCA.ViewModels.News.AddNewsViewModel

@{
    ViewBag.Title = "Edit News";
}

<script>
    $(document).ready(function () {
        CKEDITOR.replace('ArticleBody', {
            skin: 'moonocolor,/ckeditor/skins/moonocolor/',
            customConfig: '/ckeditor/config.js'
        });
    });
</script>
<h2>Edit News</h2>
@if (ViewBag.Message != null)
{
    <span class="text-danger">@ViewBag.Message</span>
}
@using (Html.BeginForm("EditNews", "News", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <font color="red">
        @Html.ValidationSummary()
    </font>
    @*Adding a return button for the User*@
    <div class="form-actions">
        <a href="@Url.Action("ManageNews", "News")" style="margin-bottom:10px" , class="btn btn-primary">Back to Manage News</a>
    </div>
    <div class="form-horizontal">
        @Html.HiddenFor(model => model.ArticleID)
        <div class="form-group">
            @Html.LabelFor(model => model.ArticleTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ArticleTitle, new { htmlAttributes = new { @class = "form-control", maxlength = 100 } })
                @Html.ValidationMessageFor(model => model.ArticleTitle, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ArticleBody, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.ArticleBody, 4, 20, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ArticleBody, "", new { @class = "text-danger" })
            </div>
        </div>
        <dl class="dl-horizontal">
            <dt>
                Attached file:
            </dt>
            <dd>
                @Model.FileName
            </dd>
        </dl>
        <div class="col-lg-2"></div>
        <div class="btn-toolbar">
            <div class="col-md-2">
                <input type="file" ID="File" name="File" />
            </div>
        </div>

        <dl class="dl-horizontal">
            <dt>
                Remove the attached file and not save any uploaded file
            </dt>
            <dd>
                @Html.EditorFor(x => x.RemoveFile)
            </dd>
        </dl>

        <br />

        <div class="col-lg-2"></div>

        


        <div class="form-actions">
            
            @if (ViewData["success"].Equals(true))
            {
                <button type="submit" class="btn btn-primary">Save</button>
            }
        </div>
    </div>
    @Html.HiddenFor(model => model.CurrentAttachedFile)
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
