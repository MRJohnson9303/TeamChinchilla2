<h2>Add Director Account</h2>
@model MESACCA.ViewModels.Member.AddAccountViewModel
@{
    ViewData["Title"] = "Add Director Account";
}
@if (ViewBag.Message != null)
{
    <span class="text-danger">@ViewBag.Message</span>
}
@using (Html.BeginForm("AddDirectorAccount", "Member", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @*Adding a return button for the Admin*@
    <div class="form-actions">
        <a href="@Url.Action("AddAccount", "Member")" style="margin-bottom:10px", class="btn btn-primary">Back to Add Account</a>
    </div>
    @*Adding First Name textfield*@
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, new { @class = "col-md-2 control-label" })
        @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
        <div class="col-md-offset-2">
            <small class="text-muted">35 character limit.</small>
        </div>
        <font color="red">
            @Html.ValidationMessageFor(model => model.FirstName)
        </font>
    </div>
    @*Adding Last Name textfield*@
    <div class="form-group">
        @Html.LabelFor(model => model.LastName, new { @class = "col-md-2 control-label" })
        @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
        <div class="col-md-offset-2">
            <small class="text-muted">35 character limit.</small>
        </div>
        <font color="red">
            @Html.ValidationMessageFor(model => model.LastName)
        </font>
    </div>
    @*@Adding readonly Account Type textfield*@
    <div class="form-group">
        @Html.LabelFor(model => model.AccountType, new { @class = "col-md-2 control-label" })
        @Html.TextBoxFor(model => model.AccountType, new { @class = "form-control", @readonly = "readonly", style = "background-color:#CCCCCC" })
    </div>
    @*Adding a inline Center dropbox*@
    <div class="form-group">
        <div class="form-inline">
            @Html.LabelFor(model => model.Center, new { @class = "col-md-2 control-label" })
            <div class="form-control">
                @*If no error was found, then a list of selectable centers will appear*@
                @if (ViewData["success"].Equals(true))
                {
                    @Html.DropDownList("Center", (SelectList)ViewData["centerNamesList"], "Select Center")
                }
            </div>
        </div>
        <div class="col-md-offset-2">
            <small class="text-muted">Current centers in the database</small>
        </div>
        <font color="red">
            @Html.ValidationMessageFor(model => model.Center)
        </font>
    </div>
    @*Adding Email textfield*@
    <div class="form-group">
        @Html.LabelFor(model => model.Email, new { @class = "col-md-2 control-label" })
        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
        <div class="col-md-offset-2">
            <small class="text-muted">Example: mesa@yahoo.com. 30 character limit.</small>
        </div>
        <font color="red">
            @Html.ValidationMessageFor(model => model.Email)
        </font>
    </div>
    @*Adding Phone Number textfield*@
    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, new { @class = "col-md-2 control-label" })
        @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control" })
        <div class="col-md-offset-2">
            <small class="text-muted">Example: 916-555-5555</small>
        </div>
        <font color="red">
            @Html.ValidationMessageFor(model => model.PhoneNumber)
        </font>
    </div>
    @*Adding a label and a table containing a row of check boxes for user rights*@
    <div class="form-group">
        <div class="col-md-3">
            <label>User Is Allowed to Alter</label>
            <table class="table">
                <thead style="font-size: 12px">
                    <tr>
                        @*Table Headings*@
                        <th>
                            @Html.DisplayNameFor(model => model.Home)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.About_Us)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Collaborations)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.MESA_Schools_Program)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.MESA_Community_College_Program)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.MESA_Engineering_Program)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.News)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Donate)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            @Html.CheckBoxFor(model => model.Home, new { @disabled = "disabled" })
                        </td>
                        <td>
                            @Html.CheckBoxFor(model => model.About_Us, new { @disabled = "disabled" })
                        </td>
                        <td>
                            @Html.CheckBoxFor(model => model.Collaborations, new { @disabled = "disabled" })
                        </td>
                        <td>
                            @Html.CheckBoxFor(model => model.MESA_Schools_Program, new { @disabled = "disabled" })
                        </td>
                        <td>
                            @Html.CheckBoxFor(model => model.MESA_Community_College_Program, new { @disabled = "disabled" })
                        </td>
                        <td>
                            @Html.CheckBoxFor(model => model.MESA_Engineering_Program, new { @disabled = "disabled" })
                        </td>
                        <td>
                            @Html.CheckBoxFor(model => model.News, new { @disabled = "disabled" })
                        </td>
                        <td>
                            @Html.CheckBoxFor(model => model.Donate, new { @disabled = "disabled" })
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    @*Adding Username textfield*@
    <div class="form-group">
        @Html.LabelFor(model => model.Username, new { @class = "col-md-2 control-label" })
        @Html.TextBoxFor(model => model.Username, new { @class = "form-control" })
        <div class="col-md-offset-2">
            <small class="text-muted">20 character limit.</small>
        </div>
        <font color="red">
            @Html.ValidationMessageFor(model => model.Username)
        </font>
    </div>
    @*Adding Password textfield*@
    <div class="form-group">
        @Html.LabelFor(model => model.Password, new { @class = "col-md-2 control-label" })
        @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
        <div class="col-md-offset-2">
            <small class="text-muted">Please use a combination of letters, numbers, symbols. 20 character limit.</small>
        </div>
        <font color="red">
            @Html.ValidationMessageFor(model => model.Password)
        </font>
    </div>
    @*Adding Confirmation Password textfield*@
    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, new { @class = "col-md-2 control-label" })
        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
        <font color="red">
            @Html.ValidationMessageFor(model => model.ConfirmPassword)
        </font>
    </div>
    @*Adding add account button*@
    <div class="form-actions">
        @if (ViewData["success"].Equals(true))
        {
            <button type="submit" class="btn btn-primary">Create Account</button>
        }
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
