@model MESACCA.ViewModels.Member.AddCenterViewModel
@{
    ViewData["Title"] = "Add Center";
}
<h2>Add Center</h2>
@if (ViewBag.Message != null)
{
    <span class="text-danger">@ViewBag.Message</span>
}
@using (Html.BeginForm("AddCenter", "Member", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @*Adding Name textfield*@
    <div class="form-group">
        @Html.LabelFor(model => model.Name, new { @class = "col-md-2 control-label" })
        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
        <div class="col-md-offset-2">
            <small class="text-muted">50 character limit.</small>
        </div>
        <font color="red">
            @Html.ValidationMessageFor(model => model.Name)
        </font>
    </div>
    @*Adding Address textfield*@
    <div class="form-group">
        @Html.LabelFor(model => model.Address, new { @class = "col-md-2 control-label" })
        @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
        <div class="col-md-offset-2">
            <small class="text-muted">Example: 6000 J Street, Sacramento, CA 95819. 50 character limit.</small>
        </div>
        <font color="red">
            @Html.ValidationMessageFor(model => model.Address)
        </font>
    </div>
    @*@Adding Location textfield*@
    <div class="form-group">
        @Html.LabelFor(model => model.Location, new { @class = "col-md-2 control-label" })
        @Html.TextBoxFor(model => model.Location, new { @class = "form-control" })
        <div class="col-md-offset-2">
            <small class="text-muted">Example: Lassen Hall 2001. 30 character limit.</small>
        </div>
        <font color="red">
            @Html.ValidationMessageFor(model => model.Location)
        </font>
    </div>
    @*Adding Center Type dropbox*@
    <div class="form-group">
        <div class="form-inline">
            @Html.LabelFor(model => model.CenterType, new { @class = "col-md-2 control-label" })
            <div class="form-control">
                @Html.DropDownList("CenterType", new List<SelectListItem>
                {
                    new SelectListItem {Text ="MEP", Value="MEP" },
                    new SelectListItem {Text ="MCCP", Value="MCCP" },
                    new SelectListItem {Text ="MSP", Value="MSP" }
                },
                "Select Center Type")
            </div>
        </div>
        <div class="col-md-offset-2">
            <small class="text-muted">Example: MEP, MCCP or MSP</small>
        </div>
        <font color="red">
            @Html.ValidationMessageFor(model => model.CenterType)
        </font>
    </div>
    @*Adding Director Name textfield*@
    <div class="form-group">
        @Html.LabelFor(model => model.DirectorName, new { @class = "col-md-2 control-label" })
        @Html.TextBoxFor(model => model.DirectorName, new { @class = "form-control" })
        <div class="col-md-offset-2">
            <small class="text-muted">71 character limit.</small>
        </div>
        <font color="red">
            @Html.ValidationMessageFor(model => model.DirectorName)
        </font>
    </div>
    @*Adding Office Number textfield*@
    <div class="form-group">
        @Html.LabelFor(model => model.OfficeNumber, new { @class = "col-md-2 control-label" })
        @Html.TextBoxFor(model => model.OfficeNumber, new { @class = "form-control" })
        <div class="col-md-offset-2">
            <small class="text-muted">Example: 916-555-5555</small>
        </div>
        <font color="red">
            @Html.ValidationMessageFor(model => model.OfficeNumber)
        </font>
    </div>

    @*Adding URL textfield*@
    <div class="form-group">
        @Html.LabelFor(model => model.URL, new { @class = "col-md-2 control-label" })
        @Html.TextBoxFor(model => model.URL, new { @class = "form-control" })
        <div class="col-md-offset-2">
            <small class="text-muted">Example: http://www.mesa.edu. 120 character limit.</small>
        </div>
        <font color="red">
            @Html.ValidationMessageFor(model => model.URL)
        </font>
    </div>
    @*Adding Description textfield*@
    <div class="form-group">
        @Html.LabelFor(model => model.Description, new { @class = "col-md-2 control-label" })
        @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
        <div class="col-md-offset-2">
            <small class="text-muted">Any information you want to share about the center such as statistical information. 250 character limit.</small>
        </div>
        <font color="red">
            @Html.ValidationMessageFor(model => model.Description)
        </font>
    </div>
    @*Adding Picture file dialog input*@
    <div class="form-group">
            @Html.LabelFor(model => model.Picture, new { @class = "col-md-2 control-label" })
            <input name="Picture" type="file" class="form-control" />
            <font color="red">
                @Html.ValidationMessageFor(model => model.Picture)
            </font>
        </div>
    @*Adding a submit button that adds new center information to the database and add the new center to the Center page*@
    <div class="form-group">
        <button style="margin-left:30px" type="submit" class="btn btn-primary">Create Center</button>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}




